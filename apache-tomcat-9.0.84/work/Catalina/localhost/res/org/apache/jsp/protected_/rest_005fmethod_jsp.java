/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-07-10 20:19:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.protected_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ilog.rules.res.console.rest.IlrRestMethodInfoParameterStyle;
import javax.jws.soap.SOAPBinding.ParameterStyle;
import ilog.rules.res.console.jsf.bean.IlrRESTDocumentationBean;
import ilog.rules.res.console.rest.IlrRestMethodInfoParameter;
import ilog.rules.res.console.rest.IlrRestMethodInfoBean;
import javax.faces.context.FacesContext;

public final class rest_005fmethod_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1677730230000L));
    _jspx_dependants.put("jar:file:/C:/IBM/tomcat/apache-tomcat-9.0.84/webapps/res/WEB-INF/lib/myfaces-impl-1.1.10.jar!/META-INF/myfaces_html.tld", Long.valueOf(1333517868000L));
    _jspx_dependants.put("jar:file:/C:/IBM/tomcat/apache-tomcat-9.0.84/webapps/res/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1426003870000L));
    _jspx_dependants.put("/WEB-INF/ilog-jsf.tld", Long.valueOf(1685575850000L));
    _jspx_dependants.put("/WEB-INF/lib/myfaces-impl-1.1.10.jar", Long.valueOf(1677730230000L));
    _jspx_dependants.put("jar:file:/C:/IBM/tomcat/apache-tomcat-9.0.84/webapps/res/WEB-INF/lib/myfaces-impl-1.1.10.jar!/META-INF/myfaces_core.tld", Long.valueOf(1333517868000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("ilog.rules.res.console.rest.IlrRestMethodInfoBean");
    _jspx_imports_classes.add("ilog.rules.res.console.jsf.bean.IlrRESTDocumentationBean");
    _jspx_imports_classes.add("javax.faces.context.FacesContext");
    _jspx_imports_classes.add("ilog.rules.res.console.rest.IlrRestMethodInfoParameterStyle");
    _jspx_imports_classes.add("ilog.rules.res.console.rest.IlrRestMethodInfoParameter");
    _jspx_imports_classes.add("javax.jws.soap.SOAPBinding.ParameterStyle");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ff_005floadBundle_0026_005fvar_005fbasename_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ff_005fview;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ff_005fverbatim;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ff_005floadBundle_0026_005fvar_005fbasename_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ff_005fview = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ff_005fverbatim = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ff_005floadBundle_0026_005fvar_005fbasename_005fnobody.release();
    _005fjspx_005ftagPool_005ff_005fview.release();
    _005fjspx_005ftagPool_005ff_005fverbatim.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" ");
      ilog.rules.res.console.jsf.bean.IlrRESTDocumentationBean restDoc = null;
      synchronized (session) {
        restDoc = (ilog.rules.res.console.jsf.bean.IlrRESTDocumentationBean) _jspx_page_context.getAttribute("restDoc", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (restDoc == null){
          restDoc = new ilog.rules.res.console.jsf.bean.IlrRESTDocumentationBean();
          _jspx_page_context.setAttribute("restDoc", restDoc, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("  \r\n");
      out.write(" ");

	// Useful variables
	java.util.Locale userLocale = FacesContext.getCurrentInstance().getViewRoot().getLocale();
	java.util.List<String> restResources = restDoc.getRestResourcesPaths(userLocale);
 	//String restResource = request.getParameter("resource");
 	int tabIndex = Integer.parseInt(request.getParameter("tab"));
 	boolean internetExplorer = (request.getHeader("User-Agent")+"").toUpperCase().indexOf("MSIE") >= 0;

      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_f_005floadBundle_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write(' ');
      //  f:view
      org.apache.myfaces.taglib.core.ViewTag _jspx_th_f_005fview_005f0 = (org.apache.myfaces.taglib.core.ViewTag) _005fjspx_005ftagPool_005ff_005fview.get(org.apache.myfaces.taglib.core.ViewTag.class);
      boolean _jspx_th_f_005fview_005f0_reused = false;
      try {
        _jspx_th_f_005fview_005f0.setPageContext(_jspx_page_context);
        _jspx_th_f_005fview_005f0.setParent(null);
        int _jspx_eval_f_005fview_005f0 = _jspx_th_f_005fview_005f0.doStartTag();
        if (_jspx_eval_f_005fview_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_f_005fview_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_f_005fview_005f0);
          }
          do {
            out.write('\r');
            out.write('\n');
            out.write(' ');
            //  f:verbatim
            org.apache.myfaces.taglib.core.VerbatimTag _jspx_th_f_005fverbatim_005f0 = (org.apache.myfaces.taglib.core.VerbatimTag) _005fjspx_005ftagPool_005ff_005fverbatim.get(org.apache.myfaces.taglib.core.VerbatimTag.class);
            boolean _jspx_th_f_005fverbatim_005f0_reused = false;
            try {
              _jspx_th_f_005fverbatim_005f0.setPageContext(_jspx_page_context);
              _jspx_th_f_005fverbatim_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_f_005fview_005f0);
              int _jspx_eval_f_005fverbatim_005f0 = _jspx_th_f_005fverbatim_005f0.doStartTag();
              if (_jspx_eval_f_005fverbatim_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                if (_jspx_eval_f_005fverbatim_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_f_005fverbatim_005f0);
                }
                do {
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write(" 	");

 					// display methods with the current root path
					String restResource = restDoc.getRestResourcesPaths(userLocale).get(tabIndex);
					java.util.List<IlrRestMethodInfoBean> restMethods = restDoc.getMethods(restResource, userLocale);
 					
	
                  out.write("\r\n");
                  out.write("	<input type=\"hidden\" id=\"nbRestMethods");
                  out.print(tabIndex);
                  out.write("\" value=");
                  out.print(restMethods.size());
                  out.write(">\r\n");
                  out.write("	");

 					int k = (tabIndex*100);
					for(int m=0;m<restMethods.size();m++){
						k++;
						IlrRestMethodInfoBean info = restMethods.get(m);
						
						// mandatory template path
	 	 				String mandatoryTemplatePath = info.getRootPath();
		 	 			for(IlrRestMethodInfoParameter requiredTemplateParameter : info.getParameters(IlrRestMethodInfoParameterStyle.Template)){
		 	 				mandatoryTemplatePath += "/{"+requiredTemplateParameter.getName()+"}";
		 	 			}
	 	 			
	 	 				// compute default query path
	 	 				String queryPath = "";
 	 					for(IlrRestMethodInfoParameter requiredQueryParameter : info.getParameters(IlrRestMethodInfoParameterStyle.Query, true)){
 	 						if( requiredQueryParameter.getFixedValue() != null){
 	 							queryPath += (queryPath.equals(""))?"?":"&";
 	 							queryPath += requiredQueryParameter.getName();
 	 							queryPath += "="+requiredQueryParameter.getFixedValue();
 	 						}
 	 						else if(requiredQueryParameter.getDefaultValue() != null){
 	 							queryPath += (queryPath.equals(""))?"?":"&";
 	 							queryPath += requiredQueryParameter.getDefaultValue();
 	 						}
 	 					}	
				
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("					<div id=\"rest_method_");
                  out.print( info.getName() );
                  out.write('_');
                  out.print( info.getTemplatePathWithRequiredQueryParams() );
                  out.write("\" class=\"restMethodInfoBlock rounded");
                  out.print( (m!=0)?" restMethodBlockSpacer":"" );
                  out.write("\">\r\n");
                  out.write("		 	 		\r\n");
                  out.write("		 	 		");

		 	 		String queryString = "";
	 	 			int nbParams = 0;
	 	 			for(int t=0;t<info.getParameters(IlrRestMethodInfoParameterStyle.Query).size();t++){ 
	 	 				IlrRestMethodInfoParameter queryParam = info.getParameters(IlrRestMethodInfoParameterStyle.Query).get(t);
	 	 				if( queryParam.isRequired() ){
	 	 					queryString += ((nbParams==0)?"?":"&")+queryParam.getName();
	 	 					queryString += (!(""+queryParam.getFixedValue()).equals(""))?("="+queryParam.getFixedValue()):"";
	 	 					nbParams++;
	 	 				}
	 	 			}
	 	 			
		 	 		if( ! internetExplorer ){
		 	 			
                  out.write("\r\n");
                  out.write("		 	 			<div id=\"method_header_");
                  out.print( k );
                  out.write("\" class=\"methodDescriptionHeader rounded\" tabindex=\"0\" >\r\n");
                  out.write("				 	 		<span class=\"methodDescriptionHeaderHttpVerb roundedMethod httpMethodColor");
                  out.print( info.getHttpMethod() );
                  out.write('"');
                  out.write('>');
                  out.print( info.getHttpMethod() );
                  out.write("</span>\r\n");
                  out.write("				 	 		<span class=\"methodDescriptionHeaderURL\">\r\n");
                  out.write("				 	 		<span style=\"padding-left:4px;\">/");
                  out.print( info.getTemplatePath() + queryString );
                  out.write("</span>\r\n");
                  out.write("				 	 		</span>\r\n");
                  out.write("				 	 		\r\n");
                  out.write("				 	 		<span class=\"methodDescriptionHeaderRepresentationBlock\">\r\n");
                  out.write("				 	 		<img id=\"expand_collapse_icon_");
                  out.print( k );
                  out.write("\"  src=\"");
                  out.print(request.getContextPath());
                  out.write("/images/ns-expand.gif\" style=\"padding-right:5px\" alt=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_expand_collapse_tooltip")) );
                  out.write("\"  title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_expand_collapse_tooltip")) );
                  out.write("\" />\r\n");
                  out.write("			 	 			</span>\r\n");
                  out.write("			 	 		</div>\r\n");
                  out.write("		 	 			");

		 	 		}
		 	 		else{
		 	 			
                  out.write("\r\n");
                  out.write("		 	 			<table id=\"method_header_");
                  out.print( k );
                  out.write("\" class=\"rounded methodDescriptionHeader\" tabindex=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n");
                  out.write("							<tr height=\"20px\" style=\"height:20px\">\r\n");
                  out.write("								<td style=\"width:20px\"><span style=\"width:20px\" class=\"methodDescriptionHeaderHttpVerb roundedMethod httpMethodColor");
                  out.print( info.getHttpMethod() );
                  out.write('"');
                  out.write('>');
                  out.print( info.getHttpMethod() );
                  out.write("</span></td>\r\n");
                  out.write("								<td style=\"text-align:left;padding-left:4px;font-weight:bold\">/");
                  out.print( info.getTemplatePath() + queryString );
                  out.write("</td>\r\n");
                  out.write("								<td style=\"width:20px\"><img id=\"expand_collapse_icon_");
                  out.print( k );
                  out.write("\" src=\"");
                  out.print(request.getContextPath());
                  out.write("/images/ns-expand.gif\" style=\"padding-right:5px;float:right\" title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_expand_collapse_tooltip")) );
                  out.write("\" /></td>\r\n");
                  out.write("							<tr>\r\n");
                  out.write("						</table>\r\n");
                  out.write("		 	 			");

		 	 		}
		 	 		
                  out.write("\r\n");
                  out.write("			 	 	<div id=\"method_description_");
                  out.print( k );
                  out.write("\" class=\"methodDescription\"><span class=\"methodNameTitle\">");
                  out.print( info.getName() );
                  out.write("</span><span style=\"padding-left:8px\">");
                  out.print( info.getDescription() );
                  out.write("</span>\r\n");
                  out.write("			 	 	</div>\r\n");
                  out.write("			 	 	\r\n");
                  out.write("			 	 	");
                  out.write("\r\n");
                  out.write("			 	 	<div id=\"invoke_header_");
                  out.print( k );
                  out.write("\" class=\"invokeHeader\" style=\"display:none;\">\r\n");
                  out.write("			 	 	");
                  out.write("\r\n");
                  out.write("			 	 	<span style=\"padding-left:3px\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_title")) );
                  out.write("</span>\r\n");
                  out.write("			 	 	</div>\r\n");
                  out.write("			 	 	<div class=\"invokeFormWrapper\">\r\n");
                  out.write("			 	 	<div id='invoke_");
                  out.print( k );
                  out.write("' class='invokeForm' style=\"display:none;\" align=\"center\">\r\n");
                  out.write("			 	 	<div id=\"invoke_form_URL_layer_");
                  out.print( k );
                  out.write("\" align=\"center\" class=\"invokeURLDiv\">\r\n");
                  out.write("					<span id=\"invoke_full_path_");
                  out.print( k );
                  out.write("\" style=\"font-weight: bold;\"><span style='margin-left:4px' id=\"invoke_template_path_display_");
                  out.print( k );
                  out.write('"');
                  out.write('>');
                  out.write('/');
                  out.print( info.getTemplatePath() );
                  out.write("</span><span id='query_invoke_display_");
                  out.print( k );
                  out.write('\'');
                  out.write('>');
                  out.print( queryPath+"&lt;" );
                  out.write("</span></span></div>\r\n");
                  out.write("					<form id=\"invoke_form_");
                  out.print( k );
                  out.write("\">\r\n");
                  out.write("		 	 		<div id=\"invoke_form_layer_");
                  out.print( k );
                  out.write("\" class=\"invokeFormLayer\">\r\n");
                  out.write("		 	 			<table id=\"invoke_form_table_");
                  out.print( k );
                  out.write("\" width='100%' role='presentation' class='invokeFormTable' align=\"center\">\r\n");
                  out.write("		 	 			");
 java.util.List<IlrRestMethodInfoParameter> allParams = info.getParametersSorted(); 
		 	 				boolean firstComplex = true;
		 	 				String parameterStyle = "";
		 	 				boolean precheckContentType = false;
		 	 				for(int r=0;r<allParams.size();r++){
		 	 					IlrRestMethodInfoParameter param = allParams.get(r);
		 			 	 			
		 			 	 			if( ! parameterStyle.equals(param.getParamStyle()+"")){
		 			 	 				// adding spacing row (if not first row)
		 			 	 				if( ! parameterStyle.equals("")){
		 			 	 					
                  out.write("\r\n");
                  out.write("		 			 	 					<tr><td colspan=\"4\">&nbsp;</td></tr>\r\n");
                  out.write("		 			 	 					");

		 			 	 				}
		 			 	 				
		 			 	 				
                  out.write("\r\n");
                  out.write("		 			 	 				<tr class=\"invokeFormParameterRow\"><td colspan=\"4\" class=\"invokeFormParameterCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_parameters_style_"+param.getParamStyle())) );
                  out.write("\r\n");
                  out.write("		 			 	 				</td></tr>\r\n");
                  out.write("		 			 	 				");

		 			 	 				parameterStyle = param.getParamStyle()+"";
		 			 	 			}
		 	 					
                  out.write("\r\n");
                  out.write("		 	 						<tr class=\"invokeFormParameterRow\">\r\n");
                  out.write("		 	 							<td width='15px' style=\"width:15px;");
                  out.print( (param.getParamStyle() == IlrRestMethodInfoParameterStyle.Complex)?"vertical-align:top;":"" );
                  out.write("\">\r\n");
                  out.write("		 	 							<a name=\"pinvoke_");
                  out.print( k );
                  out.write("_param_");
                  out.print( r );
                  out.write("\"></a>\r\n");
                  out.write("		 	 							");
 if( (param.getParamStyle() != IlrRestMethodInfoParameterStyle.Complex) && (param.isRequired() || param.getParamStyle() == IlrRestMethodInfoParameterStyle.Template)){ 
		 	 								if( (info.getHttpMethod().equals("POST") || info.getHttpMethod().equals("PUT")) && param.getParamStyle() == IlrRestMethodInfoParameterStyle.Value){ precheckContentType = true; }
		 	 								
                  out.write("\r\n");
                  out.write("		 	 								<input id=\"invoke_");
                  out.print( k );
                  out.write("_check_");
                  out.print( r );
                  out.write("\" type=\"checkbox\" disabled=\"true\" checked title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_mandatory_parameter_tooltip"))  );
                  out.write("\" style=\"cursor:help\" />\r\n");
                  out.write("		 	 								");
 
		 	 								}
		 	 								else if( param.getParamStyle() == IlrRestMethodInfoParameterStyle.Complex ){
		 	 									if( info.getHttpMethod().equals("POST") || info.getHttpMethod().equals("PUT") ){ precheckContentType = true; }
		 	 									
		 	 									if( firstComplex ){
		 	 										
                  out.write("\r\n");
                  out.write("		 	 										<input type=\"checkbox\" disabled=\"true\" checked title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_mandatory_parameter_tooltip"))  );
                  out.write("\" style=\"cursor:help\" />\r\n");
                  out.write("		 	 										</td>\r\n");
                  out.write("		 	 										<td class=\"invokeBodyParamName\" onclick=\"jumpToParam(");
                  out.print( k );
                  out.write(',');
                  out.write(' ');
                  out.print( r );
                  out.write(", true, false)\" style=\"vertical-align:top\">\r\n");
                  out.write("		 	 											<span title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_clickable_parameter_invoke_tooltip")) );
                  out.write("\" id=\"pinvoke_");
                  out.print( k );
                  out.write("_param_elt_");
                  out.print( r );
                  out.write("\">\r\n");
                  out.write("		 	 											<a class=\"requestBodyParameter\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_request_body_parameter_name")) );
                  out.write("</a>\r\n");
                  out.write("		 	 											</span>\r\n");
                  out.write("		 	 										</td>\r\n");
                  out.write("		 	 										</tr>\r\n");
                  out.write("		 	 										<tr>\r\n");
                  out.write("		 	 										<td style=\"vertical-align:top;\">");
	 	 										
		 	 									}
		 	 								
                  out.write("\r\n");
                  out.write("		 	 								\r\n");
                  out.write("		 	 								");
	
		 	 									
		 	 								}
		 	 								else{
		 	 									// pre-check 'Content-Type' header
		 	 									String checked = "";
		 	 									if( precheckContentType && (param.getName()+"").toUpperCase().equals("CONTENT-TYPE")){
		 	 										checked = " checked ";
		 	 									}
		 	 									
		 	 								
                  out.write(" \r\n");
                  out.write("		 	 								<input id=\"invoke_");
                  out.print( k );
                  out.write("_check_");
                  out.print( r );
                  out.write("\" type=\"checkbox\"");
                  out.print( checked );
                  out.write(" onclick=\"handleCheckboxChange(");
                  out.print( k );
                  out.write(")\" />\r\n");
                  out.write("		 	 								");

		 	 								}
		 	 								
                  out.write("\r\n");
                  out.write("		 	 								</td>\r\n");
                  out.write("		 	 							");

		 	 								if( param.getParamStyle() == IlrRestMethodInfoParameterStyle.Complex ){
		 	 									
                  out.write("\r\n");
                  out.write("		 	 										<td style=\"vertical-align:top\">\r\n");
                  out.write("		 	 										<table style=\"vertical-align: middle;\">\r\n");
                  out.write("		 	 										<tr style=\"vertical-align: middle;\">\r\n");
                  out.write("		 	 										<td style=\"vertical-align: middle;\">\r\n");
                  out.write("		 	 										<input id=\"invoke_");
                  out.print( k );
                  out.write("_check_");
                  out.print( r );
                  out.write("\" name=\"invoke_");
                  out.print( k );
                  out.write("_complex\" type=\"radio\" style=\"padding:0px;margin:0px;vertical-align:middle\" ");
                  out.print( firstComplex ? "checked" : "" );
                  out.write("/>\r\n");
                  out.write("		 	 										</td>\r\n");
                  out.write("		 	 										<td style=\"vertical-align: middle;\">\r\n");
                  out.write("		 	 										");
                  out.print( param.getFixedValue() );
                  out.write("\r\n");
                  out.write("		 	 										</td>\r\n");
                  out.write("		 	 										</tr>\r\n");
                  out.write("		 	 										</table>\r\n");
                  out.write("		 	 									");

		 	 									
		 	 									firstComplex = false;
		 	 								}
		 	 								else{
		 	 									
                  out.write("\r\n");
                  out.write("		 	 										<td>\r\n");
                  out.write("		 	 										\r\n");
                  out.write("		 	 										<span id=\"pinvoke_");
                  out.print( k );
                  out.write("_param_elt_");
                  out.print( r );
                  out.write("\" role=\"presentation\" class=\"invokeParamName\" title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_clickable_parameter_invoke_tooltip")) );
                  out.write("\" onclick=\"jumpToParam(");
                  out.print( k );
                  out.write(',');
                  out.write(' ');
                  out.print( r );
                  out.write(", true, false)\"><a class=\"");
                  out.print( (param.getParamStyle() == IlrRestMethodInfoParameterStyle.Value)?"requestBodyParameter":"" );
                  out.write('"');
                  out.write('>');
                  out.print( (param.getParamStyle() != IlrRestMethodInfoParameterStyle.Value) ? param.getName() : org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_request_body_parameter_name")) );
                  out.write("</a></span>\r\n");
                  out.write("		 	 									");

		 	 								}
		 	 							
                  out.write("\r\n");
                  out.write("		 	 							\r\n");
                  out.write("		 	 							<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_name_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.getName() );
                  out.write("\" />\r\n");
                  out.write("		 	 							<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_style_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.getParamStyle() );
                  out.write("\" />\r\n");
                  out.write("		 	 							<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_required_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.isRequired() );
                  out.write("\" />\r\n");
                  out.write("		 	 							<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_fixed_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.getFixedValue() == null ? "null" : param.getFixedValue());
                  out.write("\" />\r\n");
                  out.write("		 	 							<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_default_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.getDefaultValue() == null ? "null" : param.getDefaultValue() );
                  out.write("\" />\r\n");
                  out.write("		 	 							<input id=\"invoke_");
                  out.print( k );
                  out.write("_options_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.getOptions().size() );
                  out.write("\" />\r\n");
                  out.write("		 	 								\r\n");
                  out.write("		 	 							");

		 	 								if( param.getOptions().size() == 1 ){
		 	 									
                  out.write("\r\n");
                  out.write("		 	 									<input id=\"invoke_");
                  out.print( k );
                  out.write("_only_option_");
                  out.print( r );
                  out.write("\" type=\"hidden\" value=\"");
                  out.print( param.getOptions().get(0).getValue() );
                  out.write("\" />\r\n");
                  out.write("		 	 									");

		 	 								}
		 	 							
		 	 								if( param.getParamStyle() == IlrRestMethodInfoParameterStyle.Value ){
		 	 									
                  out.write("\r\n");
                  out.write("		 	 									<input id=\"invoke_");
                  out.print( k );
                  out.write("_value_parameter\" type=\"hidden\" value=\"");
                  out.print( r );
                  out.write("\" />\r\n");
                  out.write("		 	 									");

		 	 								}
		 	 							
                  out.write("\r\n");
                  out.write("		 	 							\r\n");
                  out.write("		 	 							</td>\r\n");
                  out.write("		 	 							<td>\r\n");
                  out.write("		 	 								");
 
		 	 									if( param.getOptions().size() != 0 ){
		 	 										
                  out.write("\r\n");
                  out.write("		 	 										<select data-dojo-type=\"dijit/form/ComboBox\" data-dojo-props=\"intermediateChanges:true\" id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write("\" name=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write("\" class=\"combo\" \r\n");
                  out.write("		 	 										onchange='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")' onkeydown='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")' onkeyup='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")'>\r\n");
                  out.write("		 	 										");

		 	 										for(int o=0;o<param.getOptions().size();o++){
		 	 											
                  out.write("\r\n");
                  out.write("		 	 											 <option");
                  out.print( (o==0)?" selected":"" );
                  out.write('>');
                  out.print( param.getOptions().get(o).getValue() );
                  out.write("</option>\r\n");
                  out.write("		 	 											");

		 	 										}
		 	 										
                  out.write("\r\n");
                  out.write("		 	 										</select>\r\n");
                  out.write("		 	 										");

		 	 									} 
		 	 									else if( param.getParamStyle() == IlrRestMethodInfoParameterStyle.Complex ){
		 	 										String representation = param.getDescription();
		 	 										int rows = 4;
		 	 										int nbLines = representation.split("\n").length;
		 	 										if( nbLines > rows ) rows = nbLines;
		 	 										
                  out.write("\r\n");
                  out.write("		 	 										<textarea id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write("\" cols=\"80\" rows=\"");
                  out.print( nbLines );
                  out.write("\" class=\"invokeLargeTextfield invokeFormInput\">");
                  out.print( representation );
                  out.write("</textarea>\r\n");
                  out.write("		 	 										");

		 	 									}
		 	 									else if( param.getFixedValue() != null && param.getParamStyle() != IlrRestMethodInfoParameterStyle.Value){
		 	 										
                  out.write("\r\n");
                  out.write("		 	 										<span id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write('"');
                  out.write('>');
                  out.print( param.getFixedValue() );
                  out.write("</span>\r\n");
                  out.write("		 	 										");

		 	 									}
		 	 									else{
		 	 										// binary attachment 
		 	 										if( (param.getFixedValue()+"").toUpperCase().indexOf("OCTET") >= 0 ){
		 	 										
                  out.write("\r\n");
                  out.write("		 	 											<input type=\"hidden\" value=\"binary\" id=\"invoke_type_");
                  out.print( k );
                  out.write("\" />\r\n");
                  out.write("		 	 											<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write("\" type='file' size=\"50\" class=\"invokeFormInput\" onchange='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")' />\r\n");
                  out.write("		 	 										");

		 	 										}
		 	 										else{
		 	 										
                  out.write("\r\n");
                  out.write("		 	 											<input id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write("\" type='text' class=\"invokeFormInput\" onchange='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")' onkeydown='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")' onkeyup='handleTextboxTextChanged(\"");
                  out.print( k );
                  out.write("\")' value='");
                  out.print( (param.getDefaultValue() != null)?param.getDefaultValue():"" );
                  out.write("'/>\r\n");
                  out.write("		 	 										");

		 	 										}
		 	 									}
		 	 								
                  out.write("\r\n");
                  out.write("		 	 								<img id=\"invoke_");
                  out.print( k );
                  out.write("_parameter_");
                  out.print( r );
                  out.write("_invalid\" class=\"invalidFieldMarker\" style=\"visibility:hidden;cursor:help\" src=\"");
                  out.print( request.getContextPath()+"/images/scenario-failed.png" );
                  out.write("\" \r\n");
                  out.write("		 	 									alt=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_request_invalid_parameter_tooltip")) );
                  out.write("\" title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_request_invalid_parameter_tooltip")) );
                  out.write("\" />\r\n");
                  out.write("		 	 							</td>\r\n");
                  out.write("		 	 						</tr>\r\n");
                  out.write("		 	 					");

		 	 				}
		 	 			
                  out.write("\r\n");
                  out.write("		 	 			<tr><td></td><td></td><td><div class=\"requestButtonBox invokeFormInput\"><br/>\r\n");
                  out.write("		 	 			<button type=\"button\" style=\"margin-bottom:10px\" id='invoke_validate_button_");
                  out.print( k );
                  out.write("' disabled='");
                  out.print( !info.isCallableByDefault() );
                  out.write('\'');
                  out.write(' ');
                  out.write('>');
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_button_label")) );
                  out.write("</button></div></td></tr>		 	 			\r\n");
                  out.write("		 	 			</table>\r\n");
                  out.write("	\r\n");
                  out.write("		 	 			<div style=\"margin-top:10px\">\r\n");
                  out.write("			 	 			<input id=\"invoke_");
                  out.print( k );
                  out.write("_template_path\" type=\"hidden\" value=\"");
                  out.print( info.getTemplatePath() );
                  out.write("\" />\r\n");
                  out.write("			 	 			<input id=\"invoke_");
                  out.print( k );
                  out.write("_http_method\" type=\"hidden\" value=\"");
                  out.print( info.getHttpMethod() );
                  out.write("\" />\r\n");
                  out.write("		 	 			</div>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		</form>\r\n");
                  out.write("		 	 		\r\n");
                  out.write("		 	 		");
                  out.write("\r\n");
                  out.write("		 	 		<div id=\"invoke_loader_");
                  out.print( k );
                  out.write("\" style=\"display:none;padding-bottom:5px;border:1px black solid;\"><img alt='' src=\"");
                  out.print(request.getContextPath());
                  out.write("/images/grid-loading.gif\" /><br/></div> \r\n");
                  out.write("		 	 		<div id=\"invoke_result_");
                  out.print( k );
                  out.write("\" style=\"display:none\">\r\n");
                  out.write("		 	 		<div align=\"center\" class=\"invokeResultTitle\">\r\n");
                  out.write("		 	 		<span class=\"invokeFormSubSectionTitle\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request")) );
                  out.write("</span>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		<div style=\"text-align:left\" id=\"invoke_");
                  out.print( k );
                  out.write("_request\">\r\n");
                  out.write("		 	 			<table cellpadding=\"0\" role=\"presentation\" cellspacing=\"0\" style=\"width:100%\">\r\n");
                  out.write("		 	 			<tr><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request_URL")) );
                  out.write("</td><td style=\"padding:4px\"><span id=\"invoke_");
                  out.print( k );
                  out.write("_requested_URL\"></span></td></tr>\r\n");
                  out.write("		 	 			<tr><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request_method")) );
                  out.write("</td><td style=\"padding:4px\"><span id=\"invoke_");
                  out.print( k );
                  out.write("_requested_HTTP_Method\"></span></td></tr>\r\n");
                  out.write("		 	 			<tr id=\"invoke_");
                  out.print( k );
                  out.write("_requested_headers_wrapper\"><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request_headers")) );
                  out.write("</td><td style=\"padding:4px\"><span id=\"invoke_");
                  out.print( k );
                  out.write("_requested_headers\"></span></td></tr>\r\n");
                  out.write("		 	 			<tr id=\"invoke_");
                  out.print( k );
                  out.write("_request_body_wrapper\"><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request_body")) );
                  out.write("</td><td style=\"padding:4px; max-width:1000px; width:1000px\"><pre id=\"invoke_");
                  out.print( k );
                  out.write("_request_body\" style=\"display:inline\"></pre></td></tr>\r\n");
                  out.write("		 	 			<tr id=\"request_attachments_row_");
                  out.print( k );
                  out.write("\" style=\"display:none\"><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request_attachments")) );
                  out.write("</td><td style=\"padding:4px\"><span id=\"invoke_");
                  out.print( k );
                  out.write("_requested_attachments\"></span></td></tr>\r\n");
                  out.write("		 	 			</table>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		<div align=\"center\" class=\"invokeResultTitle\">\r\n");
                  out.write("		 	 		<span class=\"invokeFormSubSectionTitle\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_response")) );
                  out.write("</span>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		<div style=\"text-align:left\" id=\"invoke_");
                  out.print( k );
                  out.write("_response\">\r\n");
                  out.write("		 	 			<table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%\">\r\n");
                  out.write("		 	 			<tr><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_response_status")) );
                  out.write("</td><td style=\"padding:4px;border-bottom:1px #EBEEF0 solid\"><span id=\"invoke_");
                  out.print( k );
                  out.write("_response_status\"></span></td></tr>\r\n");
                  out.write("		 	 			<tr><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_response_headers")) );
                  out.write("</td><td id=\"invoke_");
                  out.print( k );
                  out.write("_response_headers_cell\" style=\"padding:4px;border-bottom:1px #EBEEF0 solid\"><span id=\"invoke_");
                  out.print( k );
                  out.write("_response_headers\"></span></td></tr>\r\n");
                  out.write("		 	 			<tr><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_response_body")) );
                  out.write("</td><td id=\"response_body_cell_");
                  out.print( k );
                  out.write("\" style=\"padding:4px;vertical-align:top;\"><div id=\"invoke_");
                  out.print( k );
                  out.write("_response_body\"></div></td></tr>\r\n");
                  out.write("		 	 			<tr id=\"response_html_row_");
                  out.print( k );
                  out.write("\" style=\"display:none\"><td class=\"invokeResponseCell\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_response_html_preview")) );
                  out.write("</td><td id=\"response_html_cell_");
                  out.print( k );
                  out.write("\" style=\"padding:4px;vertical-align:top;border-top:1px #EBEEF0 solid\"><div id=\"invoke_");
                  out.print( k );
                  out.write("_response_html\"></div></td></tr>\r\n");
                  out.write("		 	 			</table>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		");
                  out.write("\r\n");
                  out.write("		 	 		\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		</div>\r\n");
                  out.write("		 	 		");
                  out.write("\r\n");
                  out.write("		 	 		\r\n");
                  out.write("		 	 	");
                  out.write("\r\n");
                  out.write("		 	 	<div id=\"params_header_");
                  out.print( k );
                  out.write("\" style=\"display:none;\" class=\"paramsDescriptionHeaderTitleWrapper\">\r\n");
                  out.write("		 	 	");
                  out.write("\r\n");
                  out.write("		 	 	<span class=\"paramsDescriptionHeaderTitle\" style=\"padding-left:4px;\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_parameters")) );
                  out.write("</span>\r\n");
                  out.write("		 	 	<br/>\r\n");
                  out.write("		 	 	<span id='description_show_");
                  out.print( k );
                  out.write("' style=\"padding-left:6px;padding-bottom:15px;cursor:pointer;\" >\r\n");
                  out.write("		 	 		<a>");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_show_details")) );
                  out.write("</a>\r\n");
                  out.write("		 	 	</span>\r\n");
                  out.write("		 	 	<span id='description_hide_");
                  out.print( k );
                  out.write("' style=\"padding-left:6px;padding-bottom:15px;cursor:pointer;display:none\" >\r\n");
                  out.write("		 	 		<a>");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_hide_details")) );
                  out.write("</a>\r\n");
                  out.write("		 	 	</span>\r\n");
                  out.write("		 	 	</div>\r\n");
                  out.write("		 	 	\r\n");
                  out.write("		 	 	<div id=\"params_");
                  out.print( k );
                  out.write("\" style=\"display:none;\" class=\"paramsDescriptionHeader\">\r\n");
                  out.write("		 	 	");

		 	 		java.util.List<IlrRestMethodInfoParameter> allParameters = info.getParametersSorted();
		 	 		boolean requestBody = false;
		 	 	
		 	 		if( allParameters.size() > 0 ){
		 	 		
                  out.write(" \r\n");
                  out.write("		 	 		<table class=\"parameterDescriptionTable\" role=\"presentation\" cellspacing=\"0px\" cellpadding=\"0px\">\r\n");
                  out.write("	 	 			");

		 	 		
	 	 			parameterStyle = "";
		 	 		for(int f=0;f<allParameters.size();f++){
		 	 			IlrRestMethodInfoParameter parameter = allParameters.get(f);
		 	 			
		 	 			if( ! parameterStyle.equals(parameter.getParamStyle()+"")){
		 	 				
                  out.write("\r\n");
                  out.write("		 	 				<tr height=\"25px\" class=\"parameterStyleRow\">\r\n");
                  out.write("		 	 				<td colspan=\"2\" class=\"");
                  out.print( (parameterStyle.equals(""))?"parameterStyleFirstCell":"parameterStyleCell");
                  out.write('"');
                  out.write('>');
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_parameters_style_"+parameter.getParamStyle())) );
                  out.write("</td>\r\n");
                  out.write("		 	 				</tr>\r\n");
                  out.write("		 	 				");

		 	 				parameterStyle = parameter.getParamStyle()+"";
		 	 			}
		 	 			
		 	 			// checking if parameters has options and at least one option has doc
 	 					boolean optionWithDoc = false;
 	 					for(int h=0;h<parameter.getOptions().size();h++){
 	 						if( parameter.getOptions().get(h).getDescription() != null && ! parameter.getOptions().get(h).getDescription().equals("") ){
 	 							optionWithDoc = true;
 	 							break;
 	 						}
 	 					}
		 	 			
		 	 			if( parameter.getParamStyle() == IlrRestMethodInfoParameterStyle.Complex ){
		 	 				if( requestBody ) continue;
		 	 				
 	 						requestBody = true;
			 	 			
 	 						// request representations
	 	 					java.util.List<IlrRestMethodInfoParameter> representationParams = info.getRequestRepresentationParameters();
	 	 					if( representationParams.size() > 0  ){
	 	 						
                  out.write("\r\n");
                  out.write("\r\n");
                  out.write("	 	 						<tr height=\"25px\" class=\"parameterDescriptionParameterRow\">\r\n");
                  out.write("		 	 					<td align=\"right\" class=\"parameterDescriptionParameterName\">\r\n");
                  out.write("			 	 					<a name=\"description_");
                  out.print( k );
                  out.write("_param_");
                  out.print( f );
                  out.write("\"></a>\r\n");
                  out.write("			 	 					<span class=\"requiredParameter\">\r\n");
                  out.write("			 	 					<span id=\"description_");
                  out.print( k );
                  out.write("_param_elt_");
                  out.print( f );
                  out.write("\" role=\"presentation\" title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_clickable_parameter_description_tooltip")) );
                  out.write("\" class=\"descriptionBodyParamName\" onclick=\"jumpToParam(");
                  out.print( k );
                  out.write(',');
                  out.write(' ');
                  out.print( f );
                  out.write(", false, false)\">");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_request_body_parameter_name")) );
                  out.write("*</span>\r\n");
                  out.write("			 	 					</span>\r\n");
                  out.write("		 	 					</td>\r\n");
                  out.write("	 	 						<td>\r\n");
                  out.write("	 	 						<table style=\"width:100%\" cellspacing=\"4px\" cellpadding=\"0px\">\r\n");
                  out.write("	 	 						<tr>\r\n");
                  out.write("	 	 							");

				 	 				for(int n=0;n<representationParams.size();n++){
					 	 			IlrRestMethodInfoParameter requestParameter = representationParams.get(n);
					 	 				
                  out.write("\r\n");
                  out.write("					 	 				<td style=\"padding:2px;vertical-align:top;padding-left:3px;padding-right:3px;");
                  out.print( (representationParams.size()==2)?"width:50%":"" );
                  out.write("\">\r\n");
                  out.write("					 	 				\r\n");
                  out.write("					 	 				<div style=\"width:100%\">\r\n");
                  out.write("					 	 					<div style=\"text-align:center;width:100%;font-weight:bold\">");
                  out.print( requestParameter.getFixedValue() );
                  out.write("</div>\r\n");
                  out.write("					 	 					<div class=\"limitedHeight limitedWidth\" style=\"margin-top:10px;\"><pre style=\"display:inline\" class=\"requestBodyDescription\">");
                  out.print( requestParameter.getDescription() );
                  out.write("</pre></div>\r\n");
                  out.write("					 	 				</div>\r\n");
                  out.write("					 	 				</td>\r\n");
                  out.write("					 	 				");
		 	 			
				 	 				}
	 	 						
                  out.write("\r\n");
                  out.write("	 	 						</tr>\r\n");
                  out.write("	 	 						</table>\r\n");
                  out.write("	 	 						</td>\r\n");
                  out.write("	 	 						</tr>\r\n");
                  out.write("	 	 						");

	 	 					}
 	 						continue;
	 	 				}
		 	 			
                  out.write("\r\n");
                  out.write("		 	 			<tr height=\"25px\" class=\"parameterDescriptionParameterRow\">\r\n");
                  out.write("		 	 				<td align=\"right\" class=\"parameterDescriptionParameterName\">\r\n");
                  out.write("		 	 					<a name=\"description_");
                  out.print( k );
                  out.write("_param_");
                  out.print( f );
                  out.write("\"></a>\r\n");
                  out.write("		 	 					<span id=\"description_");
                  out.print( k );
                  out.write("_param_elt_");
                  out.print( f );
                  out.write("\">\r\n");
                  out.write("                  					");

                  					String prefix = (parameter.isRequired() || parameter.getParamStyle() == IlrRestMethodInfoParameterStyle.Template || parameter.getParamStyle() == IlrRestMethodInfoParameterStyle.Complex)?"(*) ":"";
                  					
                  out.write("\r\n");
                  out.write("                  					<span style=\"cursor:help;vertical-align:super\" title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_mandatory_parameter_tooltip")) );
                  out.write('"');
                  out.write('>');
                  out.print( prefix );
                  out.write(" </span>\r\n");
                  out.write("		 	 						<span role=\"presentation\" class=\"");
                  out.print( (parameter.getParamStyle() == IlrRestMethodInfoParameterStyle.Value)?"valueParamName":"");
                  out.write(" descriptionParamName\" title=\"");
                  out.print( org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_clickable_parameter_description_tooltip")) );
                  out.write("\" onclick=\"jumpToParam(");
                  out.print( k );
                  out.write(',');
                  out.write(' ');
                  out.print( f );
                  out.write(", false, false)\">\r\n");
                  out.write("                  						");

                  						if(parameter.getParamStyle() == IlrRestMethodInfoParameterStyle.Value){
                    					
                  out.write("\r\n");
                  out.write("                    					");
                  out.print(org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_request_body_parameter_name")) );
                  out.write("\r\n");
                  out.write("                    					");

                  						}
                  						else{
                    					
                  out.write("\r\n");
                  out.write("                    					");
                  out.print((""+parameter.getName()).trim());
                  out.write("\r\n");
                  out.write("                   						");

                  						}
                						
                  out.write("\r\n");
                  out.write("		 	 						</span>\r\n");
                  out.write("		 	 					</span>\r\n");
                  out.write("		 	 				</td>\r\n");
                  out.write("		 	 				");

		 	 					if( (""+parameter.getDescription()).equals("") && ! optionWithDoc ){
		 	 						
                  out.write("\r\n");
                  out.write("		 	 						<td style=\"padding:3px;\" class=\"parameterDescriptionValue\">\r\n");
                  out.write("		 	 						");

		 	 						for(int g=0;g<parameter.getOptions().size();g++){
	 	 								
                  out.write("\r\n");
                  out.write("	 	 									<span class=\"regularOptionDescription ");
                  out.print( parameter.getOptions().get(g).isDefaultOption()?"defaultOption":"" );
                  out.write('"');
                  out.write('>');
                  out.print( parameter.getOptions().get(g).getValue() );
                  out.write("</span><span style=\"margin-left:0px\">");
                  out.print( parameter.getOptions().get(g).getDescription() );
                  out.write("</span>\r\n");
                  out.write("	 	 								");

		 	 						}
		 	 						
                  out.write("\r\n");
                  out.write("		 	 						</td>	\r\n");
                  out.write("		 	 						");

		 	 					}
		 	 					else{
		 	 					
                  out.write("	\r\n");
                  out.write("		 	 				<td style=\"\" class=\"parameterDescriptionValue\">\r\n");
                  out.write("		 	 					");

		 	 					if( (parameter.getDescription() != null && !parameter.getDescription().trim().equals("") && parameter.getParamStyle() != IlrRestMethodInfoParameterStyle.Value) ){
		 	 						
                  out.write("\r\n");
                  out.write("		 	 						<div style=\"padding: 3px 5px 3px 3px;\">");
                  out.print( (parameter.getDescription() != null && parameter.getParamStyle() != IlrRestMethodInfoParameterStyle.Value)?parameter.getDescription():"" );
                  out.write("</div>\r\n");
                  out.write("		 	 						");

		 	 					}
		 	 					
                  out.write("				\r\n");
                  out.write("		 	 					\r\n");
                  out.write("		 	 					");

		 	 						if( parameter.getParamStyle().equals(IlrRestMethodInfoParameterStyle.Value)){
		 	 							
                  out.write("\r\n");
                  out.write("		 	 							<div style=\"padding: 3px 5px 3px 3px;\">");
                  out.print( parameter.getHasDoc() ? parameter.getDescription() : org.apache.myfaces.shared_impl.renderkit.html.util.HTMLEncoder.encode(java.util.ResourceBundle.getBundle("ilog.rules.res.console.jsf.LocalizationResources", FacesContext.getCurrentInstance().getViewRoot().getLocale()).getString("REST_method_invoke_request_value_param_description")).replace("{0}", parameter.getFixedValue()) );
                  out.write("</div>\r\n");
                  out.write("		 	 							");

		 	 						}
		 	 						// Fixed value
		 	 						else if( parameter.hasFixedValue()){
		 	 							
                  out.write("\r\n");
                  out.write("		 	 							<div style=\"padding: 3px 5px 3px 3px;\"><span class=\"fixedParameterStyle\">");
                  out.print( parameter.getFixedValue() );
                  out.write("</span></div>							\r\n");
                  out.write("		 	 							");

		 	 						}
		 	 					
		 	 					    // Options
		 	 						if( parameter.getOptions() != null && parameter.getOptions().size() > 0){
		 	 							
                  out.write("\r\n");
                  out.write("		 	 							<table>\r\n");
                  out.write("		 	 							");

		 	 							for(int h=0;h<parameter.getOptions().size();h++){
		 	 								
                  out.write("\r\n");
                  out.write("		 	 									<tr>\r\n");
                  out.write("		 	 									<td class=\"regularOptionDescriptionAsTableCell ");
                  out.print( parameter.getOptions().get(h).isDefaultOption()?"defaultOption":"" );
                  out.write("\">\r\n");
                  out.write("		 	 									<span>");
                  out.print( parameter.getOptions().get(h).getValue() );
                  out.write("</span>\r\n");
                  out.write("		 	 									</td>\r\n");
                  out.write("		 	 									<td class=\"regularOptionDescriptionValueAsTableCell\">\r\n");
                  out.write("		 	 									<span style=\"\">");
                  out.print( parameter.getOptions().get(h).getDescription() );
                  out.write("</span>\r\n");
                  out.write("		 	 									</td>\r\n");
                  out.write("		 	 									</tr>\r\n");
                  out.write("		 	 								");

		 	 							}
		 	 							
                  out.write("\r\n");
                  out.write("		 	 							</table>\r\n");
                  out.write("		 	 							");

		 	 						}
		 	 					
                  out.write("\r\n");
                  out.write("		 	 				</td>\r\n");
                  out.write("		 	 				");

		 	 					}
		 	 				
                  out.write("\r\n");
                  out.write("		 	 				\r\n");
                  out.write("		 	 			</tr>\r\n");
                  out.write("		 	 			");

		 	 				}
		 	 			
                  out.write("	\r\n");
                  out.write("		 	 		</table>\r\n");
                  out.write("		 	 		");

  					}		
		 	 	
                  out.write("\r\n");
                  out.write("		 	 	</div>\r\n");
                  out.write("\r\n");
                  out.write("					</div> ");
                  out.write("\r\n");
                  out.write("						");

					}
				
                  out.write("\r\n");
                  out.write(" \r\n");
                  out.write(" \r\n");
                  out.write(" ");
                  int evalDoAfterBody = _jspx_th_f_005fverbatim_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
                if (_jspx_eval_f_005fverbatim_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
                  out = _jspx_page_context.popBody();
                }
              }
              if (_jspx_th_f_005fverbatim_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005ff_005fverbatim.reuse(_jspx_th_f_005fverbatim_005f0);
              _jspx_th_f_005fverbatim_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_f_005fverbatim_005f0, _jsp_getInstanceManager(), _jspx_th_f_005fverbatim_005f0_reused);
            }
            out.write('\r');
            out.write('\n');
            out.write(' ');
            int evalDoAfterBody = _jspx_th_f_005fview_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_f_005fview_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_f_005fview_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005ff_005fview.reuse(_jspx_th_f_005fview_005f0);
        _jspx_th_f_005fview_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_f_005fview_005f0, _jsp_getInstanceManager(), _jspx_th_f_005fview_005f0_reused);
      }
      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_f_005floadBundle_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  f:loadBundle
    org.apache.myfaces.taglib.core.LoadBundleTag _jspx_th_f_005floadBundle_005f0 = (org.apache.myfaces.taglib.core.LoadBundleTag) _005fjspx_005ftagPool_005ff_005floadBundle_0026_005fvar_005fbasename_005fnobody.get(org.apache.myfaces.taglib.core.LoadBundleTag.class);
    boolean _jspx_th_f_005floadBundle_005f0_reused = false;
    try {
      _jspx_th_f_005floadBundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_f_005floadBundle_005f0.setParent(null);
      // /protected/rest_method.jsp(34,0) name = basename type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_f_005floadBundle_005f0.setBasename("ilog.rules.res.console.jsf.LocalizationResources");
      // /protected/rest_method.jsp(34,0) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_f_005floadBundle_005f0.setVar("bundle");
      int _jspx_eval_f_005floadBundle_005f0 = _jspx_th_f_005floadBundle_005f0.doStartTag();
      if (_jspx_th_f_005floadBundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ff_005floadBundle_0026_005fvar_005fbasename_005fnobody.reuse(_jspx_th_f_005floadBundle_005f0);
      _jspx_th_f_005floadBundle_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_f_005floadBundle_005f0, _jsp_getInstanceManager(), _jspx_th_f_005floadBundle_005f0_reused);
    }
    return false;
  }
}
